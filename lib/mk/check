#!/bin/sh

### This file runs various checks of the makefile customization variables
### to see if they are correct.

### Usage: $0 [-v] keyword [value]*

### The '-v' option must appear first if it appears at all.
### It enables verbose output, for debugging the script.

### The first non-option argument is always a keyword that determines what
### check to do.  All the other arguments are the values to check, and
### will vary depending on the keyword.

### The environment variable TMPDIR is used as the directory to
### write scratch files, if it exists; else /tmp is used.
### The files are small, so this shouldn't be an issue.

### Keywords:
###  HDFINCFLAGS     checks the include flags for serial HDF
###  HDFLIBFLAGS     checks the linker flags for serial HDF
###  HDFMPIINCFLAGS  checks the include flags for parallel HDF
###  HDFMPILIBFLAGS  checks the linker flags for parallel HDF
###  PERL            checks the perl interpreter installation
###  CXX             checks the C++ compiler
###  FC              checks the Fortran compiler

#################################################################

rtfm () 
{
  echo "info: please read the documentation files:"
  echo "      Chombo/ReleaseNotes.txt   Chombo/README"
  echo "  for more information."
  echo ""
}

errexit () 
{
  rtfm
  exit 1
}

# Checks if a header is found.
# Args: compiler name_of_header ["parallel "]
#   parallel - Added to warning string if from parallel check
try_compile_header ()
{
  cat << CHKEOF > $TMPDIR/CHKchecktest.cpp
#include "$2"
int main() {}
CHKEOF
  if [ $? -ne 0 ] ; then
    echo "error: cannot write scratch file into ${TMPDIR}"
    echo "info: set the TMPDIR environment variable to a writeable directory."
    errexit
  fi
  $1 -o $TMPDIR/CHKchecktest.ex $TMPDIR/CHKchecktest.cpp 2> /dev/null
  if [ $? -eq 0 ] ; then
    if [ -z "$3" ] ; then
      pvarname=HDFINCFLAGS
    else
      pvarname=HDFMPIINCFLAGS
    fi
    echo
    echo "warning: the ${3}HDF header file [hdf5.h] was found in the environment and not from ${pvarname}."
    ok=1
  else
    ok=0
  fi
  rm -f $TMPDIR/CHKchecktest.*
}

# Checks if a library can be linked.
# Args: compiler name_of_library ["parallel "]
#   name_of_library - E.g., hdf5
#   parallel        - Added to warning string if from parallel check
try_link_lib ()
{
  cat << CHKEOF > $TMPDIR/CHKchecktest.cpp
int main() {}
CHKEOF
  if [ $? -ne 0 ] ; then
    echo "error: cannot write scratch file into ${TMPDIR}"
    echo "info: set the TMPDIR environment variable to a writeable directory."
    errexit
  fi
  $1 -o $TMPDIR/CHKchecktest.ex $TMPDIR/CHKchecktest.cpp -l$2 2> /dev/null
  if [ $? -eq 0 ] ; then
    if [ -z "$3" ] ; then
      pvarname=HDFLIBFLAGS
    else
      pvarname=HDFMPILIBFLAGS
    fi
    echo
    echo "warning: the ${3}HDF library [libhdf5] was found in the environment and not from ${pvarname}."
    ok=1
  else
    ok=0
  fi
  rm -f $TMPDIR/CHKchecktest.*
  return $ok
}

#################################################################

# option for verbose/debug output
if [ x"$1" = x"-v" ] ; then
  debug=echo
  shift
  set -x
elif [ x"$1" = x"-q" ] ; then
  debug=true
  shift
else
  debug=true
fi

# one arg is required
if [ x"$1" = x"" ] ; then
  echo "error: $0: first argument must specify a known action"
  exit 99
fi

# save the first arg as the item to check
action=$1 ; shift

# get the hostname using the same algorithm that Make.defs uses
hostnm=`uname -n 2> /dev/null`
if [ x$hostnm = x ] ; then
  hostnm=`hostname`
fi

# get the temp directory to write scratch file into
if [ x$TMPDIR = x ] ; then
  TMPDIR=/tmp
fi

# check
case $action in
  HDFINCFLAGS)
    $debug "checking \$(HDFINCFLAGS) = [$*]"
    ;;

  HDFLIBFLAGS)
    $debug "checking \$(HDFLIBFLAGS) = [$*]"
    ;;

  HDFMPIINCFLAGS)
    ;;

  HDFMPILIBFLAGS)
    ;;

  PERL)
    $debug "checking \$(PERL) = [$*]"
    perl="$*"
    $perl -e "print a;" > /dev/null
    stat=$?
    if [ $stat -ne 0 ] ; then
      echo "error: the \$PERL makefile variable [$perl] is incorrect."
      errexit
    fi
    ;;

  CXX)
    $debug "checking \$(CXX) = [$*]"
    olddir=`pwd`
    \cd ${TMPDIR} > /dev/null
    echo '#include <iostream>'          > check$$.cpp
    echo 'using namespace std ;'       >> check$$.cpp
    echo 'int main(){ cout << "a" ; }' >> check$$.cpp
    if [ $? -ne 0 ] ; then
      echo "error: cannot write scratch file into ${TMPDIR}"
      echo "info: set the TMPDIR environment variable to a writeable directory."
      errexit
    fi
    $* check$$.cpp > check$$cpp.out 2>&1
    stat=$?
    if [ $stat -eq 0 ] ; then
      rm -f check$$*
    fi
    \cd $olddir > /dev/null
    if [ $stat -ne 0 ] ; then
      echo "error: the C++ compiler does not work or the C++ compile options [$*] are set incorrectly."
      echo "info: look at ${TMPDIR}/check$$.cpp and ${TMPDIR}/check$$cpp.out for details."
      echo "info: set the correct compiler and options variables in Chombo/lib/mk/Make.defs.local"
      errexit
    fi
    ;;

  FC)
    $debug "checking \$(FC) = [$*]"
    olddir=`pwd`
    \cd ${TMPDIR} > /dev/null
    echo "       write(6,*) 'hello world'" > check$$.f
    echo "       end"                     >> check$$.f
    if [ $? -ne 0 ] ; then
      echo "error: cannot write scratch file into ${TMPDIR}"
      echo "info: set the TMPDIR environment variable to a writeable directory."
      errexit
    fi
    $* check$$.f > check$$f.out 2>&1
    stat=$?
    if [ $stat -eq 0 ] ; then
      rm -f check$$*
    fi
    \cd $olddir > /dev/null
    if [ $stat -ne 0 ] ; then
      echo "error: the Fortran compile options [$*] are set incorrectly."
      echo "info: look at ${TMPDIR}/check$$.f and ${TMPDIR}/check$$f.out for details."
      echo "info: set the correct compiler and options variables in Chombo/lib/mk/Make.defs.local"
      errexit
    fi
    ;;
  *)
    echo "error: $0: first argument [$action] is not a known action"
    errexit
    ;;
esac

exit 0
